---
import { z } from 'zod';
import { zDateTime } from './zodDates.ts';
import { getActivityRunningLatest, getCarbohydratesLatest, getGlucoseLatest, getInsulinBolusLatest  } from '@/api/index.ts';

const activityData = await getActivityRunningLatest()
const nutritionData = await getCarbohydratesLatest()
const insulinData = await  getInsulinBolusLatest()
const glucoseData = await getGlucoseLatest()
const dateOptions = {
  weekday: 'long',
  month: 'long',
  day: 'numeric',
} as const;

const timeOptions = {
  dayPeriod: undefined,
  hour: 'numeric',
  minute: 'numeric',
  second: undefined,
} as const;

const DistanceSchema = z.object({
  units: z.string(),
  value: z.number(),
});

const RunningSchema = z
  .object({
    distance: DistanceSchema,
    time: zDateTime,
  })
  .transform(v => {
    const { distance, time, ...rest } = v;
    return {
      kilometers: distance.units === 'miles' ? (distance.value * 1.609344).toFixed(2) : distance.value.toFixed(2),
      date: new Date(v.time).toLocaleDateString('en-US', dateOptions),
      time: new Date(v.time).toLocaleTimeString('en-US', timeOptions),
      ...rest,
    };
  });
const GlucoseSchema = z
  .object({
    time: zDateTime,
    units: z.string(),
    value: z.number(),
    payload: z
      .object({
        'com.LoopKit.GlucoseKit.HKMetadataKey.GlucoseTrend': z.string().nullable().optional(),
      })
      .nullable()
      .optional(),
  })
  .transform(v => {
    const { time, value, payload, ...rest } = v;
    return {
      value: v.value.toFixed(1),
      date: new Date(v.time).toLocaleDateString('en-US', dateOptions),
      time: new Date(v.time).toLocaleTimeString('en-US', timeOptions),
      trend: payload?.['com.LoopKit.GlucoseKit.HKMetadataKey.GlucoseTrend'],
      ...rest,
    };
  });

const BolusSchema = z
  .object({
    normal: z.number(),
    time: zDateTime,
  })
  .transform(v => {
    const { time, ...rest } = v;
    return {
      date: new Date(v.time).toLocaleDateString('en-US', dateOptions),
      time: new Date(v.time).toLocaleTimeString('en-US', timeOptions),
      ...rest,
    };
  });

const NutritionSchema = z.object({
  carbohydrate: z.object({
    net: z.number(),
    units: z.string(),
  }),
});

const FoodSchema = z
  .object({
    nutrition: NutritionSchema,
    time: zDateTime,
  })
  .transform(v => {
    const { nutrition} = v;
    return {
      carbohydrate: nutrition.carbohydrate.net,
      units: nutrition.carbohydrate.units,
      date: new Date(v.time).toLocaleDateString('en-US', dateOptions),
      time: new Date(v.time).toLocaleTimeString('en-US', timeOptions),
    };
  });
  const runningStats = RunningSchema.parse(activityData);
  const glucoseStats = GlucoseSchema.parse(glucoseData);
  const bolusStats = BolusSchema.parse(insulinData);
  const foodStats = FoodSchema.parse(nutritionData);
---
    <div class="container mx-auto px-4 max-w-[1000px]">
      <h3 class="text-2xl font-semibold leading-6 text-gray-900">Lastest Stats</h3>
      <dl class="my-5 grid grid-cols-1 gap-5 sm:grid-cols-2">
          <div
            class="overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6 flex justify-around"
          >
            <div class="">
              <dt class="truncate text-sm font-medium text-gray-500">Running</dt>
              <dd class="mt-1 text-3xl font-semibold tracking-tight text-gray-900">{runningStats.kilometers} km</dd>
              <dd class="mt-1 text-sm  tracking-tight text-gray-400">
                {runningStats.date} @ {runningStats.time}
              </dd>
              <dd class="mt-1 text-sm  tracking-tight text-gray-400"></dd>
            </div>
            <div class="flex-none self-center m-4">
<svg xmlns="http://www.w3.org/2000/svg" class="fill-indigo-500 h-12 w-12" height="16" width="14" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288H384c17.7 0 32-14.3 32-32s-14.3-32-32-32H362.7c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352H32c-17.7 0-32 14.3-32 32s14.3 32 32 32h69.6c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z"/></svg>
              </div>
          </div>
          <div
            class="overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6 flex justify-around"
          >
            <div class="">
              <dt class="truncate text-sm font-medium text-gray-500">Blood Glucose</dt>
              <dd class="mt-1 text-3xl flex flex-row items-center font-semibold tracking-tight text-gray-900">{glucoseStats.value} {glucoseStats.units} {
                glucoseStats?.trend == '↗' ? 
<svg xmlns="http://www.w3.org/2000/svg" height="16" class="fill-black w-6 h-6" width="14" viewBox="0 0 448 512"><path d="M246.6 470.6c-12.5 12.5-32.8 12.5-45.3 0l-160-160c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L224 402.7 361.4 265.4c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3l-160 160zm160-352l-160 160c-12.5 12.5-32.8 12.5-45.3 0l-160-160c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L224 210.7 361.4 73.4c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3z"/></svg>
                : 
                glucoseStats.trend == "→" ?
<svg xmlns="http://www.w3.org/2000/svg" height="16" class="fill-black h-6 w-6" width="10" viewBox="0 0 320 512"><path d="M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z"/></svg>
                 : 
<svg xmlns="http://www.w3.org/2000/svg" height="16" class="w-6 h-6 fill-black" width="14" viewBox="0 0 448 512"><path d="M201.4 137.4c12.5-12.5 32.8-12.5 45.3 0l160 160c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L224 205.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l160-160z"/></svg>
              }</dd>
              <dd class="mt-1 text-sm  tracking-tight text-gray-400">
                {glucoseStats.date} @ {glucoseStats.time}
              </dd>
              <dd class="mt-1 text-sm  tracking-tight text-gray-400"></dd>
            </div>
            <div class="flex-none self-center m-4">
               <svg xmlns="http://www.w3.org/2000/svg" class="fill-red-500 h-12 w-12" height="16" width="12" viewBox="0 0 384 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M192 512C86 512 0 426 0 320C0 228.8 130.2 57.7 166.6 11.7C172.6 4.2 181.5 0 191.1 0h1.8c9.6 0 18.5 4.2 24.5 11.7C253.8 57.7 384 228.8 384 320c0 106-86 192-192 192zM96 336c0-8.8-7.2-16-16-16s-16 7.2-16 16c0 61.9 50.1 112 112 112c8.8 0 16-7.2 16-16s-7.2-16-16-16c-44.2 0-80-35.8-80-80z"/></svg>
              </div>
          </div>
          <div
            class="overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6 flex justify-around"
          >
            <div class="">
              <dt class="truncate text-sm font-medium text-gray-500">Insulin Dosage</dt>
              <dd class="mt-1 text-3xl font-semibold tracking-tight text-gray-900">{bolusStats.normal} units</dd>
              <dd class="mt-1 text-sm  tracking-tight text-gray-400">
                {bolusStats.date} @ {bolusStats.time}
              </dd>
              <dd class="mt-1 text-sm  tracking-tight text-gray-400"></dd>
            </div>
            <div class="flex-none self-center m-4">
<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" class="fill-emerald-600 h-12 w-12" viewBox="0 0 512 512"><path d="M441 7l32 32 32 32c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-15-15L417.9 128l55 55c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-72-72L295 73c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l55 55L422.1 56 407 41c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0zM210.3 155.7l61.1-61.1c.3 .3 .6 .7 1 1l16 16 56 56 56 56 16 16c.3 .3 .6 .6 1 1l-191 191c-10.5 10.5-24.7 16.4-39.6 16.4H97.9L41 505c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l57-57V325.3c0-14.9 5.9-29.1 16.4-39.6l43.3-43.3 57 57c6.2 6.2 16.4 6.2 22.6 0s6.2-16.4 0-22.6l-57-57 41.4-41.4 57 57c6.2 6.2 16.4 6.2 22.6 0s6.2-16.4 0-22.6l-57-57z"/></svg>
              </div>
          </div>
          <div
            class="overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6 flex justify-around"
          >
            <div class="">
              <dt class="truncate text-sm font-medium text-gray-500">Carbohydrates</dt>
              <dd class="mt-1 text-3xl font-semibold tracking-tight text-gray-900">{foodStats.carbohydrate} g</dd>
              <dd class="mt-1 text-sm  tracking-tight text-gray-400">
                {foodStats.date} @ {foodStats.time}
              </dd>
              <dd class="mt-1 text-sm  tracking-tight text-gray-400"></dd>
            </div>
            <div class="flex-none self-center m-4">
<svg xmlns="http://www.w3.org/2000/svg" class="fill-slate-500 h-12 w-12" height="16" width="14" viewBox="0 0 448 512"><path d="M416 0C400 0 288 32 288 176V288c0 35.3 28.7 64 64 64h32V480c0 17.7 14.3 32 32 32s32-14.3 32-32V352 240 32c0-17.7-14.3-32-32-32zM64 16C64 7.8 57.9 1 49.7 .1S34.2 4.6 32.4 12.5L2.1 148.8C.7 155.1 0 161.5 0 167.9c0 45.9 35.1 83.6 80 87.7V480c0 17.7 14.3 32 32 32s32-14.3 32-32V255.6c44.9-4.1 80-41.8 80-87.7c0-6.4-.7-12.8-2.1-19.1L191.6 12.5c-1.8-8-9.3-13.3-17.4-12.4S160 7.8 160 16V150.2c0 5.4-4.4 9.8-9.8 9.8c-5.1 0-9.3-3.9-9.8-9L127.9 14.6C127.2 6.3 120.3 0 112 0s-15.2 6.3-15.9 14.6L83.7 151c-.5 5.1-4.7 9-9.8 9c-5.4 0-9.8-4.4-9.8-9.8V16zm48.3 152l-.3 0-.3 0 .3-.7 .3 .7z"/></svg>
              </div>
          </div>
        {}
      </dl>
    </div>
